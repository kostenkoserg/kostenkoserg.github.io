<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JBake</title>
    <link>https://kostenko.org</link>
    <atom:link href="https://kostenko.org/feed.xml" rel="self" type="application/rss+xml" />
    <description>JBake Bootstrap Template</description>
    <language>en-gb</language>
    <pubDate>Wed, 20 Feb 2019 17:42:26 +0200</pubDate>
    <lastBuildDate>Wed, 20 Feb 2019 17:42:26 +0200</lastBuildDate>

    <item>
      <title>How to generate ssh keys on Linux</title>
      <link>https://kostenko.org/blog/2019/02/linux-generate-private-shh-key.html</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">blog/2019/02/linux-generate-private-shh-key.html</guid>
      	<description>
	&lt;p&gt;Sometimes, by security or usability reasons authentication with SSH keys looks much better than passwords. To generate personal keys, please, do next:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Login your remote instance&lt;/li&gt;
&lt;li&gt;Generate ssh keys by&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -f ~/.ssh/[KEY_FILENAME] -C [USERNAME]
cat [KEY_FILENAME].pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Download private key ([KEY_FILENAME]) to your local PC&lt;/li&gt;
&lt;li&gt;Try to connect from your local with key:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;chmod 400 [KEY_FILENAME]
ssh -i [KEY_FILENAME] [USERNAME]@yourhost.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To disable root login and password based login refer to  &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; and edid next sections:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PasswordAuthentication no
PermitRootLogin no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then reload ssh server&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service ssh restart
&lt;/code&gt;&lt;/pre&gt;

	</description>
    </item>
    <item>
      <title>My first video</title>
      <link>https://kostenko.org/blog/2019/02/github-jbake-blog-video.html</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">blog/2019/02/github-jbake-blog-video.html</guid>
      	<description>
	
Have published my first YouTube video (about blogging with jbake)!

&lt;br/&gt;&lt;br/&gt;
&lt;div class=&quot;row&quot;&gt;
    &lt;iframe align =&quot;center&quot; class=&quot;col-md-offset-3 col-lg-6 col-md-6 col-sm-12 col-xs-12&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/_0C2xTa8jsY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

	</description>
    </item>
    <item>
      <title>Jbake. Add tags, multi languages support and analytics</title>
      <link>https://kostenko.org/blog/2019/01/jbake-blog-improve.html</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">blog/2019/01/jbake-blog-improve.html</guid>
      	<description>
	&lt;h4&gt;1. Tags&lt;/h4&gt;
&lt;p&gt;Jbake supports tagging out of the box. It means that engine will generate separate page for each tag. To enable this feature on your blog you need to change &lt;code&gt;render.tags&lt;/code&gt; property in your &lt;code&gt;jbake.properties&lt;/code&gt; file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;render.tags=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next  modify template file depends on where you whant to reneder tags. For this blog I am using freemarker templates and made desition to put tags as part of menu bar. So, chages of my &lt;code&gt;menu.ftl&lt;/code&gt; below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  &amp;lt;ul class=&amp;quot;dropdown-menu&amp;quot;&amp;gt;
      &amp;lt;#list tags as tag&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;${content.rootpath}${tag.uri}&amp;quot;&amp;gt;${tag.name}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
      &amp;lt;/#list&amp;gt;
  &amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&apos;s is it!&lt;/p&gt;
&lt;h4&gt;2. Multi languages&lt;/h4&gt;
&lt;p&gt;Now let&apos;s talk about multilanguage support. It is pity, but Jbake does not support blogging in different languages at the same time by default. So, we need a some hacks to do that. First idea  I had was about two the same sites  in different languages. It is not big deal, but in case changes for  templates, assets or images  you will need to do it twice. What is not so good.&lt;/p&gt;
&lt;p&gt;Instead of full copy  I did additional directory &lt;code&gt;content_ru&lt;/code&gt; just with content.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── assets  
├── content  
├── content_ru
├── templates
├── jbake.properties
├── README.md  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;jbake.properies&lt;/code&gt; you can specify which content should be used.&lt;/p&gt;
&lt;p&gt;So, I  choosen english as default language and bake my blog in the next way:&lt;/p&gt;
&lt;p&gt;bakeblog.sh:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash

# Helper script to bake the blog
# Author: kostenko

export PATH=&amp;quot;/opt/jbake-2.6.3-bin/bin&amp;quot;:$PATH
rm -R ./output
# Building en version
export JBAKE_OPTS=&amp;quot;-Duser.language=EN&amp;quot;
jbake -b
# Build ru version
export JBAKE_OPTS=&amp;quot;-Duser.language=RU&amp;quot;
mv jbake.properties jbake.properties.orig
cat jbake.properties.orig &amp;gt;&amp;gt; jbake.properties
echo &amp;quot;content.folder=content_ru&amp;quot; &amp;gt;&amp;gt; jbake.properties
jbake -b . output/ru
# cleanup
rm jbake.properties
mv jbake.properties.orig jbake.properties
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s add to the menu bar links to choose language:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- switch language --&amp;gt;
&amp;lt;ul class=&amp;quot;nav navbar-nav navbar-right&amp;quot;&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/&amp;quot;&amp;gt;en&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;/ru&amp;quot;&amp;gt;ru&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Done!&lt;/p&gt;
&lt;h4&gt;3. Analytics&lt;/h4&gt;
&lt;p&gt;To enable &lt;a href=&quot;https://analytics.google.com&quot;&gt;Google analytics&lt;/a&gt; functionality on your Jbake based  site, you need to do few simple steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Register your resource on  google analytics&lt;/li&gt;
&lt;li&gt;Get provided by GA code snippet&lt;/li&gt;
&lt;li&gt;Paste provided snippet to your &lt;code&gt;header.ftl&lt;/code&gt; as first block of &lt;code&gt;&amp;lt;HEAD&amp;gt;&lt;/code&gt; section.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Global site tag (gtag.js) - Google Analytics --&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;script async src=&amp;quot;https://www.googletagmanager.com/gtag/js?id=&amp;lt;YOUR_GA_ID&amp;gt;&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;script&amp;gt;
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag(&apos;js&apos;, new Date());
    gtag(&apos;config&apos;, &apos;&amp;lt;YOUR_GA_ID&amp;gt;&apos;);
  &amp;lt;/script&amp;gt;
  ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Congrats! You are ready to blogging!&lt;/p&gt;
&lt;p&gt;P.S. If you want to have comments for your posts, - refer to the services like &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt; - it is aloso easy to integrate and nice to have for some reasons.&lt;br /&gt;
P.P.S. Blog sources available on &lt;a href=&quot;https://github.com/kostenkoserg/kostenko.blog.src&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

	</description>
    </item>
    <item>
      <title>Start blogging with GitHub and Jbake</title>
      <link>https://kostenko.org/blog/2019/01/github-jbake-blog.html</link>
      <pubDate>Fri, 18 Jan 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">blog/2019/01/github-jbake-blog.html</guid>
      	<description>
	&lt;p&gt;Hosting of personal blog, company blog or landing page of your project - easy enough with &lt;a href=&quot;https://pages.github.com/&quot;&gt;github&lt;/a&gt;. In this post i will try to explain how to do it in two steps.&lt;/p&gt;
&lt;h4&gt;Step 1. Deploy static content to GitHub&lt;/h4&gt;
&lt;p&gt;First of all we need an account on &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt; and base knoweledges about  &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;. Actually, as i know, another popular web-based Git-repository  &lt;a href=&quot;https://gitlab.com/&quot;&gt;GitLab&lt;/a&gt; also supports hosting of static content, so you can choose what you like more.&lt;/p&gt;
&lt;p&gt;Now you need to create new project named as [account].github.io For example: kostenkoserg.github.io&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/ru/img/my_github_srcshot.png&quot; alt=&quot;github pages project screenshot&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Actually, we already did all necessary preparation for our hosting. Now just clone the project, create simple index.html and push it back to the repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/kostenkoserg/kostenkoserg.github.io.git
$ cd kostenkoserg.github.io
$ echo &amp;quot;Hello World!&amp;quot;
$ git commit -m &amp;quot;my first github page&amp;quot;
$ git push
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Congrats! Our new site currently available over world wide web: &lt;a href=&quot;https://kostenkoserg.github.io&quot;&gt;https://kostenkoserg.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/ru/img/first_github_page.png&quot; alt=&quot;first_github_page&quot; /&gt;&lt;br /&gt;
By the way  you also can use existing domain for your GitHub based site. For do that you just need to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;A&lt;/code&gt; records to your DNS provider with GitHub IP&apos;s&lt;/li&gt;
&lt;li&gt;Provide in GitHub project settings your DNS name&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Step 2. Static blog generation with JBake&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://jbake.org/&quot;&gt;Jbake&lt;/a&gt; is a java based open source solution for static site generation. For JBake available integration with Gradle and Maven. Jbake out of the box supports Bootstrap and can be easy integrated with other CSS frameworks. As template engines JBake supports Freemarker, Groovy, Thymeleaf and Jade.&lt;/p&gt;
&lt;p&gt;To start with let&apos;s download distribution from &lt;a href=&quot;https://jbake.org/download.html&quot;&gt;project site&lt;/a&gt; and extract the package to your favorite directory. Now we can generate static site with example content&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ /opt/jbake/bin/jbake -i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As result we should have site template with next structire:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;├── assets
│   ├── css
│   │   ├── asciidoctor.css
│   │   ├── base.css
│   │   ├── bootstrap.min.css
│   │   └── prettify.css
│   ├── favicon.ico
│   ├── fonts
│   │   ├── ...
│   └── js
│       ├── bootstrap.min.js
│       ├── html5shiv.min.js
│       ├── jquery-1.11.1.min.js
│       └── prettify.js
├── content
│   ├── about.html
│   └── blog
│       └── 2013
│           ├── first-post.html
│           ├── second-post.md
│           └── third-post.adoc
├── jbake.properties
└── templates
    ├── archive.ftl
    ├── feed.ftl
    ├── footer.ftl
    ├── header.ftl
    ├── index.ftl
    ├── menu.ftl
    ├── page.ftl
    ├── post.ftl
    ├── sitemap.ftl
    └── tags.ftl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&apos;s generate site from above&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/opt/jbake/bin/jbake -b
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that we will have direcory &lt;code&gt;output&lt;/code&gt; with our static site.&lt;br /&gt;
To check the result you can start embedded server and open  &lt;a href=&quot;http://localhost:8820/&quot;&gt;http://localhost:8820/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/opt/jbake/bin/jbake -s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/ru/img/jbake_default_site.png&quot; alt=&quot;jbake_default_site&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Well done! Our static site ready for blogging. You just need edit content of  &lt;code&gt;content&lt;/code&gt; directory, regenerate site and push   &lt;code&gt;output&lt;/code&gt;  to GitHub repository.&lt;/p&gt;
&lt;p&gt;Jbake supports few types of content: HTML, Markdown, AsciiDoc, - that is greate and allow you blogging with your favorite text editor. For this blog I am using &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; и &lt;a href=&quot;https://www.markdownguide.org/basic-syntax/&quot;&gt;Markdown&lt;/a&gt;.&lt;/p&gt;

	</description>
    </item>
    <item>
      <title>My first blog post</title>
      <link>https://kostenko.org/blog/2019/01/start-blogging.html</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0200</pubDate>
      <guid isPermaLink="false">blog/2019/01/start-blogging.html</guid>
      	<description>
	&lt;p&gt;I wanted to start a my own tech blog long ago. But by different reasons have started only now. First i wanted to do own blog engine, after spent lot of time to searching for nice look and feel  and  then sorting out popular solutions like wordpres, wix, blogger etc...&lt;/p&gt;
&lt;p&gt;After all i found &lt;a href=&quot;https://pages.github.com/&quot;&gt;pages.github.io&lt;/a&gt; with their static site generator &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Last one looks good from different points of view. It is simple, it is for free, it is quick enough, it is stable.  Finally if GitHub it is a pretty nice place for work with source code why it can&apos;t be the same for a blog source ?&lt;/p&gt;
&lt;p&gt;While investigating Jekyll (written on Rubby), i found  JVM based Jekyll analog - project &lt;a href=&quot;https://jbake.org/&quot;&gt;JBake&lt;/a&gt;. Оf course last one seemed to me most closer.&lt;/p&gt;
&lt;p&gt;So, decision is made. Let&apos;s go!&lt;/p&gt;

	</description>
    </item>

  </channel> 
</rss>
